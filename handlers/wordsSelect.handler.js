import { User } from '../models/user.js';
import { getWordsListForTraining } from './utils/getWordsListForTraining.js';
import { InlineKeyboard } from 'grammy';
import { formatDate } from '../utils/date.js';

export const handleSelectWords = async (ctx) => {
  const lessonId = ctx.callbackQuery.data.split('_').at(-1);
  ctx.session.selectedLessonId = lessonId;

  const user = await User.findOne({ telegramId: ctx.from.id });
  if (!user) return ctx.reply('–ù–∞—á–Ω–∏ —Å –∫–Ω–æ–ø–∫–æ—á–∫–∏ /start');

  const lesson = user.lessons.find((l) => l._id.toString() === lessonId);

  if (!lesson) return ctx.reply('–ù–∞—á–Ω–∏ —Å –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–ª–æ–≤');

  const wordsList = getWordsListForTraining(lesson.wordIds, user.words);

  const keyboard = new InlineKeyboard()
    .text('‚ûï –î–æ–±–∞–≤–∏—Ç—å —Å–ª–æ–≤–∞', 'add_word')
    .row()
    .text('üß† –ü–æ—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞—Ç—å—Å—è', 'train')
    .text('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', 'stats')
    .row()
    .text('üîô –ù–∞–∑–∞–¥', 'words');

  return ctx.reply(
    `<b>Repeat the phrases from:</b>\n${lesson.name} (${formatDate(lesson.date)})\n\n${wordsList}\n\n`,
    { parse_mode: 'HTML', reply_markup: keyboard }
  );
};
