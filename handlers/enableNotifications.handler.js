import { User } from '../models/user.js';

export async function enableNotifications(ctx) {
  const user = await User.findOne({ telegramId: ctx.from.id });

  if (!user) {
    const replay =
      '‚ùå <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ.</b>\n\n' +
      '–ü–æ–ø—Ä–æ–±—É–π –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π /start.';
    await ctx.reply(replay);
    return;
  }

  if (user.notificationsEnabled) {
    const replay =
      '‚öôÔ∏è <b>–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —É–∂–µ –≤–∫–ª—é—á–µ–Ω—ã</b> ‚Äî –≤—Å—ë –≤ –ø–æ—Ä—è–¥–∫–µ! üëç\n\n' +
      'üïí <i>–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø—Ä–∏—Ö–æ–¥—è—Ç –º–∞–∫—Å–∏–º—É–º 1 —Ä–∞–∑ –≤ –Ω–µ–¥–µ–ª—é, —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Ç—ã –Ω–µ –∑–∞—Ö–æ–¥–∏–ª –≤ –±–æ—Ç–∞.</i>';
    return ctx.reply(replay, {
      parse_mode: 'HTML',
    });
  } else {
    user.notificationsEnabled = true;
    await user.save();

    return ctx.reply(
      'üîî <b>–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Å–Ω–æ–≤–∞ –≤–∫–ª—é—á–µ–Ω—ã!</b>\n\n' +
        '–¢–µ–ø–µ—Ä—å —è –±—É–¥—É –Ω–∞–ø–æ–º–∏–Ω–∞—Ç—å —Ç–µ–±–µ –æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞—Ö.\n\n' +
        'üïí <i>–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø—Ä–∏—Ö–æ–¥—è—Ç –º–∞–∫—Å–∏–º—É–º 1 —Ä–∞–∑ –≤ –Ω–µ–¥–µ–ª—é, —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Ç—ã –Ω–µ –∑–∞—Ö–æ–¥–∏–ª –≤ –±–æ—Ç–∞.</i>',
      {
        parse_mode: 'HTML',
      }
    );
  }
}
